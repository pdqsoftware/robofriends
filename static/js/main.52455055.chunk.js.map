{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","index","SearchBox","props","type","placeholder","onChange","searchChange","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","handleSearchTextChange","event","searchText","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAgBeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAEtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACI,6BAAMJ,IACN,4BAAKC,WCYNI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAOC,GACf,OACI,cAAC,EAAD,CAEIV,GAAOS,EAAMT,GACbC,KAASQ,EAAMR,KACfC,MAAUO,EAAMP,OAHRO,EAAMT,UCK3BW,EAbG,SAACC,GACf,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAWH,EAAMI,kBCClBC,EARA,SAACL,GACZ,OACI,qBAAKM,MAAS,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACMT,EAAMU,YCmBLC,E,kDArBX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GAErBC,KAAKC,UAAS,iBAAO,CAAEJ,UAAU,Q,+BAIjC,OAAIG,KAAKJ,MAAMC,SAEJ,uEAEJG,KAAKhB,MAAMU,a,GAlBEQ,aC8DbC,E,kDAvDX,aAAe,IAAD,8BACV,gBAqBJC,uBAAyB,SAACC,GACtB,EAAKJ,UAAS,iBAAO,CAAEK,WAAYD,EAAME,OAAOC,WArBhD,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,WAAY,IAJN,E,gEAUO,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKZ,UAAS,iBAAO,CACjBtB,OAAQkC,W,+BAcb,IAAD,EACyBb,KAAKJ,MAA5BjB,EADF,EACEA,OAAQ2B,EADV,EACUA,WACVQ,EAAiBnC,EAAOoC,QAAO,SAAClC,GAClC,OAAOA,EAAMR,KAAK2C,cAAcC,SAASX,EAAWU,kBAGxD,OAAKrC,EAAOuC,OAIJ,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAiBY,KAAKI,yBACjC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAWmC,WAR9B,gD,GAvCDK,IAAMjB,WCITkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.52455055.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    // const { id, name, email } = props\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((robot, index) => {\r\n                    return (\r\n                        <Card \r\n                            key = { robot.id }\r\n                            id = { robot.id }\r\n                            name = { robot.name }\r\n                            email = { robot.email }\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n\r\n// const CardList = (props) => {\r\n//     const { robots } = props\r\n//     const robotCard = robots.map((robot, index) => {\r\n//         return (\r\n//             <Card \r\n//                 key = { robot.id }\r\n//                 id = { robot.id }\r\n//                 name = { robot.name }\r\n//                 email = { robot.email }\r\n//             />\r\n//         )\r\n//     });\r\n\r\n//     return (\r\n//         <div>\r\n//             { robotCard }\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default CardList","import React from 'react'\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search robots'\r\n                onChange={ props.searchChange }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{ overflow: 'scroll', border: '2px solid black', height: '600px' }}>\r\n            { props.children }\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // This lifecycle method runs when an error occurs - check documentation\r\n        this.setState(() => ({ hasError: true }))\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // Report the error\r\n            return <h1>Oooops! An unknown error has occured!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\n\r\n// import { robots } from './robots';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchText: ''\r\n        }\r\n\r\n        // this.handleSearchTextChange = this.handleSearchTextChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> {\r\n                return response.json()\r\n            })\r\n            .then(users => {\r\n                this.setState(() => ({\r\n                    robots: users\r\n                }))\r\n            })\r\n    }\r\n\r\n    handleSearchTextChange = (event) => {\r\n        this.setState(() => ({ searchText: event.target.value}))\r\n        // const filteredRobots = this.state.robots.filter((robot) => {\r\n        //     return robot.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n        // })\r\n            \r\n        // console.log(filteredRobots)\r\n    }\r\n\r\n    render () {\r\n        const { robots, searchText } = this.state\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(searchText.toLowerCase())\r\n        })\r\n            \r\n        if (!robots.length) {\r\n            return <h3>Loading...</h3>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange = { this.handleSearchTextChange } />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = { filteredRobots } />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}